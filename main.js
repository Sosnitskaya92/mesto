(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._likes=e.likes,this._owner=e.owner._id,this.id=e._id,this._userId=n,this._cardSelector=r,this._handleCardClick=o,this._handleLikeClick=i,this._handleDeleteCard=u}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"deleteElement",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListners",value:function(){var e=this;this._element.querySelector(".element__heart").addEventListener("click",(function(){return e._handleLikeClick(e)})),this._element.querySelector(".element__delete").addEventListener("click",(function(){return e._handleDeleteCard(e)})),this._element.querySelector(".element__image").addEventListener("click",(function(){return e._handleCardClick(e._link,e._name)}))}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._setEventListners(),this.handleDeleteButton(),this.updateLikeButton();var e=this._element.querySelector(".element__image");return this._element.querySelector(".element__title").textContent=this._name,e.src=this._link,e.alt=this._name,this._element.querySelector(".element__heart-number").textContent=this._likes.length,this._element}},{key:"checkCardOwner",value:function(){if(this._userId===this._owner)return!0}},{key:"handleDeleteButton",value:function(){!0===this.checkCardOwner()?this._element.querySelector(".element__delete").classList.remove("element__delete_inactive"):this._element.querySelector(".element__delete").classList.add("element__delete_inactive")}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"updateLikeButton",value:function(){this.isLiked()?this._element.querySelector(".element__heart").classList.add("element__heart_active"):this._element.querySelector(".element__heart").classList.remove("element__heart_active")}},{key:"_updateLikeNumber",value:function(){this._element.querySelector(".element__heart-number").textContent=this._likes.length,this._element.querySelector(".element__heart").classList.toggle("element__heart_active")}},{key:"setLikes",value:function(e){this._likes=e,this._updateLikeNumber()}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationConfig=t,this._elementForm=n,this._submitButton=this._elementForm.querySelector(this._validationConfig.submitButtonSelector),this._inputList=Array.from(this._elementForm.querySelectorAll(this._validationConfig.inputSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._elementForm.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationConfig.inputErrorClass),n.textContent=t,n.classList.add(this._validationConfig.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._elementForm.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationConfig.inputErrorClass),t.classList.remove(this._validationConfig.errorClass),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toogleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.setAttribute("disabled",!0),this._submitButton.classList.add(this._validationConfig.inactiveButtonClass)):(this._submitButton.removeAttribute("disabled"),this._submitButton.classList.remove(this._validationConfig.inactiveButtonClass))}},{key:"_setEventListener",value:function(){var e=this;this.toogleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e.toogleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListener()}},{key:"resetErrorValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.closePopup()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(t)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close"))&&e.closePopup()}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function h(e,t){if(t&&("object"===c(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitFormFunction=t,n._form=n._popup.querySelector(".popup__form"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this._form.querySelectorAll(".popup__input"),t={};return e.forEach((function(e){return t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var e=this;l(d(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._popup.querySelector(".popup__save").textContent="Сохранение...",e._submitFormFunction(e._getInputValues()),e.closePopup()}))}},{key:"backTextButtonSave",value:function(){this._popup.querySelector(".popup__save").textContent="Сохранить"}},{key:"backTextButtonCreat",value:function(){this._popup.querySelector(".popup__save").textContent="Создать"}},{key:"closePopup",value:function(){this._form.reset(),l(d(u.prototype),"closePopup",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function v(e,t){return v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v(e,t)}function m(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return b(e)}function b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(i,e);var t,n,r,o=(n=i,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(n);if(r){var o=w(this).constructor;e=Reflect.construct(t,arguments,o)}else e=t.apply(this,arguments);return m(this,e)});function i(e){var t,n,r,u,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),a=function(e,r){n._imagePopupPicture=n._popup.querySelector(".popup__image"),n._subtitlePopup=n._popup.querySelector(".popup__subtitle"),n._imagePopupPicture.src=e,n._imagePopupPicture.alt=r,n._subtitlePopup.textContent=r,k((t=b(n),w(i.prototype)),"openPopup",t).call(t)},(u="openPopupImage")in(r=b(n=o.call(this,e)))?Object.defineProperty(r,u,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[u]=a,n}return t=i,Object.defineProperty(t,"prototype",{writable:!1}),t}(a);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function O(e,t){return O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},O(e,t)}function L(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._form=document.querySelector(".popup__form_delete"),t}return t=u,(n=[{key:"handleSubmit",value:function(e){this._submitHandler=e}},{key:"setEventListeners",value:function(){var e=this;E(q(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler()}))}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._job=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._job.textContent=e.about}},{key:"setAvatar",value:function(e){this._avatar.src=e.avatar}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U,x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch(this._baseUrl,{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl,{method:"GET",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"editUserInfo",value:function(e){return fetch(this._baseUrl,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"addCard",value:function(e){return fetch(this._baseUrl,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"putCardLike",value:function(e){return fetch("".concat(this._baseUrl,"/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"deleteCardLike",value:function(e){return fetch("".concat(this._baseUrl,"/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"editAvatar",value:function(e){return fetch(this._baseUrl,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},A=document.querySelector(".profile__edit"),V=document.querySelector(".profile__add"),F=document.querySelector(".profile__avatar-edit"),N=document.querySelector(".popup__input_type_name"),z=document.querySelector(".popup__input_type_info"),H=document.querySelector(".popup_edit"),J=document.querySelector(".popup_add"),G=document.querySelector(".popup_edit-avatar"),M=document.querySelector(".elements"),K=new B(".profile__title",".profile__text",".profile__avatar"),Q=new i(D,H);Q.enableValidation();var W=new i(D,J);W.enableValidation();var X=new i(D,G);X.enableValidation();var Y=new P(".popup_open");Y.setEventListeners();var Z=new _(".popup_edit",(function(e){ne.editUserInfo(e).then((function(e){fe(e)})).catch((function(e){console.log(e)})).finally((function(){Z.closePopup()}))}));Z.setEventListeners();var $=new _(".popup_add",(function(e){re.addCard(e).then((function(e){M.prepend(le(e))})).catch((function(e){console.log(e)})).finally((function(){$.closePopup()}))}));$.setEventListeners();var ee=new _(".popup_edit-avatar",(function(e){!function(e){oe.editAvatar(e).then((function(e){ue(e)})).catch((function(e){console.log(e)})).finally((function(){ee.closePopup()}))}(e)}));ee.setEventListeners();var te=new T(".popup_delete");te.setEventListeners();var ne=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort36/users/me",headers:{authorization:"9bb3333e-8dc8-44bf-a219-29f503167caa","Content-Type":"application/json"}}),re=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort36/cards",headers:{authorization:"9bb3333e-8dc8-44bf-a219-29f503167caa","Content-Type":"application/json"}}),oe=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort36/users/me/avatar",headers:{authorization:"9bb3333e-8dc8-44bf-a219-29f503167caa","Content-Type":"application/json"}}),ie=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort36/cards",headers:{authorization:"9bb3333e-8dc8-44bf-a219-29f503167caa","Content-Type":"application/json"}});function ue(e){K.setAvatar(e)}function ae(e,t){Y.openPopupImage(e,t)}function ce(e){te.openPopup(),te.handleSubmit((function(){re.deleteCard(e.id).then((function(){e.deleteElement()})).then((function(){te.closePopup()})).catch((function(e){console.log(e)}))}))}function se(e){e.isLiked()?ie.deleteCardLike(e.id).then((function(t){e.setLikes(t.likes)})).catch((function(e){console.log(e)})):ie.putCardLike(e.id).then((function(t){e.setLikes(t.likes)})).catch((function(e){console.log(e)})),console.log(e)}function le(e){return new t(e,U,".element__template",ae,se,ce).generateCard()}function fe(e){K.setUserInfo(e)}ne.getUserInfo().then((function(e){U=e._id,fe(e)})).catch((function(e){console.log(e)})),re.getInitialCards().then((function(e){var t=new r({items:e,renderer:function(e){t.addItem(le(e))}},".elements");t.renderItems()})).catch((function(e){console.log(e)})),ne.getUserInfo().then((function(e){ue(e)})).catch((function(e){console.log(e)})),A.addEventListener("click",(function(){Z.backTextButtonSave(),K.getUserInfo(),N.value=K.getUserInfo().name,z.value=K.getUserInfo().job,Z.openPopup(),Q.resetErrorValidation()})),V.addEventListener("click",(function(){$.backTextButtonCreat(),$.openPopup(),W.toogleButtonState(),W.resetErrorValidation()})),F.addEventListener("click",(function(){ee.backTextButtonSave(),ee.openPopup(),X.resetErrorValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,